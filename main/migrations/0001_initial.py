# Generated by Django 5.1.2 on 2025-09-19 14:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('address_en', models.CharField(blank=True, max_length=255, verbose_name='Адрес (English)')),
                ('address_kk', models.CharField(blank=True, max_length=255, verbose_name='Адрес (Қазақша)')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('campus_items', models.TextField(help_text='Список пунктов через перевод строки', verbose_name='Кампус — пункты')),
                ('campus_items_en', models.TextField(blank=True, verbose_name='Кампус — пункты (English)')),
                ('campus_items_kk', models.TextField(blank=True, verbose_name='Кампус — пункты (Қазақша)')),
                ('campus_image', models.ImageField(blank=True, help_text="Изображение отображается на странице 'Контакты и карта' в разделе 'Кампус'", null=True, upload_to='campus/', verbose_name='Изображение кампуса')),
                ('campus_3d_button_text', models.CharField(blank=True, default='Изучить кампус в 3D', help_text='Текст, который отображается на кнопке для 3D просмотра кампуса', max_length=200, verbose_name='Текст кнопки 3D кампуса')),
                ('campus_3d_button_text_en', models.CharField(blank=True, help_text='Текст кнопки на английском языке', max_length=200, verbose_name='Текст кнопки 3D кампуса (English)')),
                ('campus_3d_button_text_kk', models.CharField(blank=True, help_text='Текст кнопки на казахском языке', max_length=200, verbose_name='Текст кнопки 3D кампуса (Қазақша)')),
                ('campus_3d_url', models.URLField(blank=True, help_text='URL для 3D просмотра кампуса (например, виртуальный тур)', verbose_name='Ссылка на 3D кампус')),
                ('campus_3d_enabled', models.BooleanField(default=False, help_text='Включить/выключить отображение кнопки 3D кампуса на сайте', verbose_name='Показывать кнопку 3D кампуса')),
                ('it_support_url', models.URLField(blank=True, help_text='URL для IT поддержки (например, система helpdesk)', verbose_name='Ссылка на IT поддержку')),
                ('it_support_enabled', models.BooleanField(default=True, help_text='Включить/выключить отображение кнопки IT поддержки на странице обратной связи', verbose_name='Показывать кнопку IT поддержки')),
            ],
            options={
                'verbose_name': 'Контакты и карта',
                'verbose_name_plural': 'Контакты и карта',
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
                ('name_en', models.CharField(blank=True, max_length=100, verbose_name='Название (English)')),
                ('name_kk', models.CharField(blank=True, max_length=100, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_en', models.TextField(blank=True, verbose_name='Описание (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (Қазақша)')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Категория документов',
                'verbose_name_plural': 'Категории документов',
                'ordering': ['order_index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
                ('name_en', models.CharField(blank=True, max_length=100, verbose_name='Название (English)')),
                ('name_kk', models.CharField(blank=True, max_length=100, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_en', models.TextField(blank=True, verbose_name='Описание (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (Қазақша)')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Категория FAQ',
                'verbose_name_plural': 'Категории FAQ',
                'ordering': ['order_index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Простой текст истории университета', verbose_name='Текст истории')),
                ('text_en', models.TextField(blank=True, help_text='University history text in English', verbose_name='Текст истории (English)')),
                ('text_kk', models.TextField(blank=True, help_text='Университет тарихының мәтіні қазақ тілінде', verbose_name='Текст истории (Қазақша)')),
                ('image', models.ImageField(blank=True, upload_to='about/', verbose_name='Картинка истории')),
            ],
            options={
                'verbose_name': 'История университета',
                'verbose_name_plural': 'История университета',
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название инструкции')),
                ('title_en', models.CharField(blank=True, max_length=200, verbose_name='Название (English)')),
                ('title_kk', models.CharField(blank=True, max_length=200, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(verbose_name='Текст инструкции')),
                ('description_en', models.TextField(blank=True, verbose_name='Текст (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Текст (Қазақша)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
            ],
            options={
                'verbose_name': 'Инструкция',
                'verbose_name_plural': 'Инструкции',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Leader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('rector', 'Ректор'), ('prorector', 'Проректор'), ('other', 'Другое')], max_length=50, verbose_name='Должность')),
                ('full_name', models.CharField(max_length=200, verbose_name='Имя и фамилия')),
                ('photo', models.ImageField(blank=True, upload_to='leaders/', verbose_name='Фото')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Руководитель университета',
                'verbose_name_plural': 'Руководство университета',
                'ordering': ['order', 'role'],
            },
        ),
        migrations.CreateModel(
            name='LessonCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название категории')),
                ('name_en', models.CharField(blank=True, max_length=100, verbose_name='Название (English)')),
                ('name_kk', models.CharField(blank=True, max_length=100, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_en', models.TextField(blank=True, verbose_name='Описание (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (Қазақша)')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Категория уроков',
                'verbose_name_plural': 'Категории уроков',
                'ordering': ['order_index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Текст миссии')),
                ('text_en', models.CharField(blank=True, max_length=500, verbose_name='Текст миссии (English)')),
                ('text_kk', models.CharField(blank=True, max_length=500, verbose_name='Текст миссии (Қазақша)')),
            ],
            options={
                'verbose_name': 'Миссия университета',
                'verbose_name_plural': 'Миссия университета',
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название процесса')),
                ('title_en', models.CharField(blank=True, max_length=200, verbose_name='Название (English)')),
                ('title_kk', models.CharField(blank=True, max_length=200, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(verbose_name='Текст процесса')),
                ('description_en', models.TextField(blank=True, verbose_name='Текст (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Текст (Қазақша)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Процесс',
                'verbose_name_plural': 'Процессы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Values',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Текст ценностей')),
                ('text_en', models.CharField(blank=True, max_length=500, verbose_name='Текст ценностей (English)')),
                ('text_kk', models.CharField(blank=True, max_length=500, verbose_name='Текст ценностей (Қазақша)')),
            ],
            options={
                'verbose_name': 'Ценности университета',
                'verbose_name_plural': 'Ценности университета',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название документа')),
                ('title_en', models.CharField(blank=True, max_length=200, verbose_name='Название (English)')),
                ('title_kk', models.CharField(blank=True, max_length=200, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('description_en', models.TextField(blank=True, verbose_name='Описание (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (Қазақша)')),
                ('file', models.FileField(upload_to='documents/', verbose_name='Файл (Русский)')),
                ('file_en', models.FileField(blank=True, upload_to='documents/', verbose_name='Файл (English)')),
                ('file_kk', models.FileField(blank=True, upload_to='documents/', verbose_name='Файл (Қазақша)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Количество скачиваний')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Загружено пользователем')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.documentcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Полное имя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('department', models.CharField(blank=True, max_length=200, verbose_name='Кафедра/Отдел')),
                ('position', models.CharField(blank=True, max_length=200, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('bio', models.TextField(blank=True, verbose_name='Биография')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Редактор',
                'verbose_name_plural': 'Редакторы',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300, verbose_name='Вопрос')),
                ('question_en', models.CharField(blank=True, max_length=300, verbose_name='Вопрос (English)')),
                ('question_kk', models.CharField(blank=True, max_length=300, verbose_name='Вопрос (Қазақша)')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('answer_en', models.TextField(blank=True, verbose_name='Ответ (English)')),
                ('answer_kk', models.TextField(blank=True, verbose_name='Ответ (Қазақша)')),
                ('order_index', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярный вопрос')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.faqcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Часто задаваемый вопрос',
                'verbose_name_plural': 'Часто задаваемые вопросы',
                'ordering': ['category__order_index', 'order_index', '-is_popular', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.CharField(choices=[('hr', 'HR'), ('it', 'IT поддержка')], max_length=20, verbose_name='Кому направить')),
                ('feedback_type', models.CharField(choices=[('suggestion', 'Предложение'), ('question', 'Вопрос')], max_length=20, verbose_name='Тип обращения')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема обращения')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('file', models.FileField(blank=True, null=True, upload_to='feedback/', verbose_name='Прикрепленный файл')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('in_progress', 'В обработке'), ('resolved', 'Решено'), ('closed', 'Закрыто')], default='new', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Обратная связь',
                'verbose_name_plural': 'Обратная связь',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название урока')),
                ('title_en', models.CharField(blank=True, max_length=200, verbose_name='Название (English)')),
                ('title_kk', models.CharField(blank=True, max_length=200, verbose_name='Название (Қазақша)')),
                ('description', models.TextField(verbose_name='Описание урока')),
                ('description_en', models.TextField(blank=True, verbose_name='Описание (English)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (Қазақша)')),
                ('video', models.FileField(blank=True, help_text='Поддерживаемые форматы: MP4, AVI, MOV, WMV', null=True, upload_to='lessons/videos/', verbose_name='Видео файл')),
                ('pdf_file', models.FileField(blank=True, help_text='PDF файл будет автоматически конвертирован в слайды', null=True, upload_to='lessons/pdfs/', verbose_name='PDF файл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_by', models.ForeignKey(blank=True, help_text='Редактор или администратор, создавший урок', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор урока')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.lessoncategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LessonCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата завершения')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.lesson', verbose_name='Урок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Завершение урока',
                'verbose_name_plural': 'Завершения уроков',
                'ordering': ['-completed_at'],
                'unique_together': {('lesson', 'user')},
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='completed_users',
            field=models.ManyToManyField(related_name='completed_lessons', through='main.LessonCompletion', to=settings.AUTH_USER_MODEL, verbose_name='Завершившие пользователи'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Полное имя')),
                ('department', models.CharField(blank=True, max_length=200, verbose_name='Кафедра')),
                ('position', models.CharField(blank=True, max_length=200, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('office', models.CharField(blank=True, max_length=100, verbose_name='Кабинет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_watched', models.BooleanField(default=False, verbose_name='Видео просмотрено')),
                ('video_current_time', models.FloatField(default=0.0, verbose_name='Текущее время видео (секунды)')),
                ('video_total_time', models.FloatField(default=0.0, verbose_name='Общее время видео (секунды)')),
                ('video_max_progress_percent', models.FloatField(default=0.0, verbose_name='Максимальный прогресс видео (%)')),
                ('video_last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление видео')),
                ('pdf_completed', models.BooleanField(default=False, verbose_name='PDF/слайды завершены')),
                ('pdf_current_page', models.PositiveIntegerField(default=1, verbose_name='Текущая страница PDF')),
                ('pdf_total_pages', models.PositiveIntegerField(default=1, verbose_name='Всего страниц PDF')),
                ('pdf_last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление PDF')),
                ('slides_current_slide', models.PositiveIntegerField(default=1, verbose_name='Текущий слайд')),
                ('slides_total_slides', models.PositiveIntegerField(default=1, verbose_name='Всего слайдов')),
                ('slides_max_progress_percent', models.FloatField(default=0.0, verbose_name='Максимальный прогресс слайдов (%)')),
                ('slides_completed', models.BooleanField(default=False, verbose_name='Слайды завершены')),
                ('slides_last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление слайдов')),
                ('is_ready_to_complete', models.BooleanField(default=False, verbose_name='Готов к завершению')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='main.lesson', verbose_name='Урок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Прогресс урока',
                'verbose_name_plural': 'Прогресс уроков',
                'ordering': ['-last_activity'],
                'unique_together': {('lesson', 'user')},
            },
        ),
        migrations.CreateModel(
            name='LessonSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='lessons/slides/', verbose_name='Изображение слайда')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Название слайда')),
                ('description', models.TextField(blank=True, verbose_name='Описание слайда')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='main.lesson', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Слайд урока',
                'verbose_name_plural': 'Слайды уроков',
                'ordering': ['lesson', 'order'],
                'unique_together': {('lesson', 'order')},
            },
        ),
    ]
